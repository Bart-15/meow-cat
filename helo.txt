    
    // searchQuery {todo: 'implement debounce :)'}
    const fetchQuery = async () => {
        try {

            const res = await cat.getByBreeds(`${url}/breeds/search?q=${debounceQuery}`);

            if(res.status === 500) {
                return setErrors({message: "Check internet connection"});
            }

            setQueryResult(res.data);
            console.log(res.data)
        }catch(e) {
            console.log(e.message)
        }
    }

    useEffect(() => {
        if(debounceQuery.length > 2) {
            fetchQuery();
         } 
    }, [debounceQuery])
    

    // searchCat
    const searchCat = async (e, v) => {
       const value = v ? v.name.toLowerCase() : "";
        
       try {

        // if(!value) {
        //     return fetchData();
        // }

        // const res = await cat.getByBreeds(`${url}/breeds/search?q=${value}&limit=100`);
        // console.log("####data", res.data)

       return navigate("./cat")
       }catch(e) {
        console.log(e.message)
       }
    }

    const [query, setQuery] = useState('');
    const debounceQuery = useDebounce(query, 1000)
    const [queryResult, setQueryResult] = useState([]);